The ``print_square doctest`` module
===================================

Using ``print_square``
___________________________________

Tests to run for task 4, print_square. 

import function from module name:

    >>> print_square = __import__('4-print_square').print_square

    Printing a float:
    >>> print_square(4.0)
    ####
    ####
    ####
    ####

    Printing a reg integer:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

    Printing zero:
    >>> print_square(0)

    Printing one:
    >>> print_square(1)
    #

    Printing a negative:
    >>> print_square(-1)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

    Print a neg float:
    >>> print_square(-1.50)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    Printing a float with decimal value:
    >>> print_square(1.50)
    #

    Print empty:
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'

    Print a space between a number:
    >>> print_square(2 5)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

    Print a comma space between value:
    >>> print_square(2, 5)
    Traceback (most recent call last):
        ...
    TypeError: print_square() takes 1 positional argument but 2 were given

    >>> print_square(2a)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

    >>> print_square( 2)
    ##
    ##

    >>> print_square(02)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid token

